@page "/car"
@using CarDetailsBlazor.Pages;
@using CarDetailsModels;
@using System.Net.Http.Json;
@using System.Net.Http;
@inject HttpClient httpClient;
<h3>Cars!</h3>


@if (jointCarInfo == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-hover w-auto">
        <thead>
            <tr>
                <th>Manufacturer</th>
                <th>Name</th>
                <th>Cylinders</th>
                <th>City MPG</th>
                <th>Highway MPG</th>
                <th>Combined MPG</th>
                <th>Headquarters</th>
                <th>Year</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var jointInfo in JointInfoVisible)
            {

                <tr>
                    <td>@jointInfo.Manufacturer</td>
                    <td>@jointInfo.Name</td>
                    <td>@jointInfo.Cylinders</td>
                    <td>@jointInfo.City</td>
                    <td>@jointInfo.Highway</td>
                    <td>@jointInfo.Combined</td>
                    <td>@jointInfo.Headquarters</td>
                    <td>@jointInfo.Year</td>

                </tr>
            }

        </tbody>
        <tbody>
            <tr class=" g-0 text-center">
                <td class="table-success"> Lowest City Fuel Consumption: @JointInfoVisible.OrderByDescending(item => item.City).FirstOrDefault()?.Manufacturer,  @JointInfoVisible.OrderByDescending(item => item.City).FirstOrDefault()?.Name || MPG:@JointInfoVisible.OrderByDescending(item => item.City).FirstOrDefault()?.City</td>
                <td class="table-success"> Lowest Highway Fuel Consumption: @JointInfoVisible.OrderByDescending(item => item.City).FirstOrDefault()?.Manufacturer,  @JointInfoVisible.OrderByDescending(item => item.Highway).FirstOrDefault()?.Name || MPG:@JointInfoVisible.OrderByDescending(item => item.Highway).FirstOrDefault()?.Highway</td>
                <td class="table-info"> Number of Cars Models: @jointCarInfo.Select(c => c.Name).Distinct().Count()</td>
                <td class="table-info"> Number Of Manufacturers: @jointCarInfo.Select(c => c.Manufacturer).Distinct().Count()</td>
            </tr>

        </tbody>

    </table>


    <button @onclick="PreviousPage" disabled="@IsFirstPage" class="btn btn-success">Previous</button>
    <button @onclick="NextPage" disabled="@IsLastPage" class="btn btn-success">Next</button>

}

@code {

    private List<JointInfo> jointCarInfo;
    private List<JointInfo> JointInfoVisible { get; set; }
    private int PageNumber { get; set; }
    private bool IsFirstPage => PageNumber == 1;
    private bool IsLastPage => JointInfoVisible.Count < 15;


    protected override async Task OnInitializedAsync()
    {

        jointCarInfo = await GetJointInfo();

        LoadData();
    }


    private async Task<List<JointInfo>> GetJointInfo()
    {
        var response = await httpClient.GetAsync("https://localhost:7126/api/jointinfo");
        if (response.IsSuccessStatusCode)
        {            
            return await response.Content.ReadFromJsonAsync<List<JointInfo>>(); 

        }
        else
        {
            throw new Exception($"Failed to get joint car info: {response.ReasonPhrase}");
        }
    }


    private void LoadData()
    {
        JointInfoVisible = jointCarInfo.Skip((PageNumber - 1) * 15).Take(15).ToList();
    }

    private void NextPage()
    {
        PageNumber++;
        LoadData();
    }

    private void PreviousPage()
    {
        PageNumber--;
        LoadData();
    }









}
