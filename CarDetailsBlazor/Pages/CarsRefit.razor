@page "/refitCars"
@using CarDetailsModels;
@using CarDetailsBlazor.Interfaces;
@using Refit;
@inject ICarWebServiceAPI CarWebServiceAPI;

<h3>Cars with Refit</h3>

@if(cars is not null && cars.Any())
{
    <table class="table table-striped table-hover w-auto">
        <thead>
            <tr>
                <th>Id</th>
                <th>Year</th>
                <th>Manufacturer</th>
                <th>Name</th>
                <th>Displacement</th>
                <th>Cylinders</th>
                <th>City MPG</th>
                <th>Highway MPG</th>
                <th>Combined MPG</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var car in cars)
            {
                <tr>
                    <td>@car.Id</td>
                    <td>@car.MappedYear</td>
                    <td>@car.MappedManufacturer</td>
                    <td>@car.MappedName</td>
                    <td>@car.MappedDisplacement</td>
                    <td>@car.MappedCylinders</td>
                    <td>@car.MappedCity</td>
                    <td>@car.MappedHighway</td>
                    <td>@car.MappedCombined</td>
                </tr>
            }
        </tbody>

    </table>
}

@code {
    private int? Page { get; set; }
    private int? PageSize { get; set; }
    public IEnumerable<CarDetailsAPI.Models.CarsModel> cars { get; set; }

    protected override async Task OnInitializedAsync()
    {
        cars = await CarWebServiceAPI.GetCars( Page, PageSize);


    }

}
