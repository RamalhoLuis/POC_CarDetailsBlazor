@page "/searchdeletecar"
@using CarDetailsModels;
@using CarDetailsBlazor;
@using System.Net.Http.Json;
@using System.Net.Http;
@using Microsoft.AspNetCore.Mvc;
@using System.Text.Json;

<h3>Search And Delete</h3>

<h3>Search Car Record by ID</h3>
<div>
    <label for="searchCar">Insert Car Id:</label>
    <input id="carId" type="text" @bind="newCar.Id" />
    <button type="button" @onclick="() => SearchCarRecord(newCar.Id)" class="btn btn-primary">Search</button>
</div>
@if (carSearched == true)
{
    <h4>Car Record Found:</h4>
    <table class="table table-striped table-hover w-auto">
        <thead>
            <tr>
                <th>Id</th>
                <th>Manufacturer</th>
                <th>Name</th>
                <th>Cylinders</th>
                <th>City MPG</th>
                <th>Highway MPG</th>
                <th>Combined MPG</th>
                <th>Headquarters</th>
                <th>Year</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@newCar.Id</td>
                <td>@newCar.Year</td>
                <td>@newCar.Manufacturer</td>
                <td>@newCar.Name</td>
                <td>@newCar.Displacement</td>
                <td>@newCar.Cylinders</td>
                <td>@newCar.City</td>
                <td>@newCar.Highway</td>
                <td>@newCar.Combined</td>
            </tr>
        </tbody>
    </table>
}
<h3>Delete Car Record by ID</h3>
<div>
    <label for="deleteCar">Insert Car Id:</label>
    <input id="carId" type="text" @bind="newCar.Id" />
    <button type="button" @onclick="() => DeleteCarRecord(newCar.Id)" class="btn btn-danger">Delete</button>
</div>
@if (carSearched == true)
{
    <label class="alert alert-success" role="alert">@statusMessage</label>
}
@if (carDeleted == true)
{
    <label class="alert alert-danger" role="alert">@statusMessage</label>
}

@code {
    private Car newCar = new Car();
    private Manufacturer newManufacturer = new Manufacturer();
    private HttpClient httpClient;
    private string statusMessage;
    private bool carSearched = false;
    private bool carDeleted = false;



    protected override async Task OnInitializedAsync()
    {
        httpClient = new HttpClient();
    }

    private async Task DeleteCarRecord(int carId)
    {
        var response = await httpClient.DeleteAsync($"https://localhost:7126/api/cars/{carId}");
        if (response.IsSuccessStatusCode)
        {
            carDeleted = true;
            statusMessage = "Hell yeah! Car Deleted!";
        }
        else
        {
            statusMessage = "Car Not Found";
        }
    }

    private async Task SearchCarRecord(int carId)
    {
        HttpResponseMessage response = await httpClient.GetAsync($"https://localhost:7126/api/cars/{carId}");
        if (response.IsSuccessStatusCode)
        {
            statusMessage = "Hell yeah! Car Found!";
            newCar = (Car)await response.Content.ReadFromJsonAsync<Car>();
            carSearched = true;
        }
        else
        {
            statusMessage = "Car Not Found";
        }
    }

}
